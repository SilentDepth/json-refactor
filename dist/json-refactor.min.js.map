{"version":3,"sources":["json-refactor.js"],"names":[],"mappings":"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","file":"json-refactor.min.js","sourcesContent":["/**\r\n * Parse a key path expression for an object\r\n * @param obj {object}\r\n * @param path {string}\r\n * @param makeCrumbs {boolean} To add non-exist middle property\r\n * @returns {{parent: *, key: string}}\r\n */\r\n\r\nfunction parser(obj, path, makeCrumbs = false) {\r\n\r\n\r\n  let parent = obj;\r\n  let key = '';\r\n  let tokens = path.split('.');\r\n  let len = tokens.length;\r\n  let isArray;\r\n  let arrIdx;\r\n\r\n  tokens.forEach((token, idx) => {\r\n    [, key, isArray, arrIdx] = /(.+?)(\\[(\\d+)?])?$/.exec(token);\r\n\r\n    if (isArray) {\r\n      if (makeCrumbs && !(parent[key] instanceof Array)) {\r\n        parent[key] = [];\r\n      }\r\n      parent = parent[key];\r\n      key = arrIdx || parent.length;\r\n    }\r\n\r\n    if (idx < len - 1) {\r\n      if (makeCrumbs && !parent[key]) {\r\n        parent[key] = {};\r\n      }\r\n      parent = parent[key];\r\n    }\r\n  });\r\n\r\n  if (parent) {\r\n    return {parent, key};\r\n  }\r\n}\n\nfunction getter(source, sourceKey) {\r\n  let key = sourceKey;\r\n  let needIteration = false;\r\n\r\n  if (/\\[]$/.test(key)) {\r\n    needIteration = true;\r\n    key = key.slice(0, -2);\r\n  }\r\n\r\n  let pathObj = parser(source, key);\r\n\r\n  if (pathObj) {\r\n    return {\r\n      needIteration,\r\n      value: pathObj.parent[pathObj.key],\r\n    };\r\n  }\r\n}\n\nfunction setter(target, targetKey, value = null, setUndefined = false) {\r\n  if (value === undefined) {\r\n    if (!setUndefined) {\r\n      return;\r\n    }\r\n  } else {\r\n    if (typeof targetKey === 'function') {\r\n      let result = targetKey(value);\r\n      if (result === undefined) {\r\n        return\r\n      }\r\n      ({key: targetKey, value} = result);\r\n    } else if (/^!/.test(targetKey)) {\r\n      value = ['1', 'true', 'yes', 't', 'y'].indexOf(('' + value).toLowerCase()) >= 0;\r\n      if (/^!!/.test(targetKey)) {\r\n        targetKey = targetKey.slice(2);\r\n      } else {\r\n        targetKey = targetKey.slice(1);\r\n        value = !value;\r\n      }\r\n    } else if (/^\\+/.test(targetKey)) {\r\n      targetKey = targetKey.slice(1);\r\n      value = +value;\r\n    }\r\n  }\r\n\r\n  let pathObj = parser(target, targetKey, true);\r\n  pathObj.parent[pathObj.key] = value instanceof Object ? JSON.parse(JSON.stringify(value)) : value;\r\n}\n\nconst CONFIG_KEY = '__json-refactor__';\r\n\r\nfunction jsonRefactor(source, map, target = {}) {\r\n  const {setUndefined = false} = map[CONFIG_KEY] || {};\r\n\r\n  // TODO: parameters validation\r\n\r\n  const mapKeys = Reflect.ownKeys(map).filter(key => key !== CONFIG_KEY);\r\n  mapKeys.forEach(sourceKey => {\r\n    let got = getter(source, sourceKey);\r\n    if (got.value === undefined && !setUndefined) return;\r\n    if (got.needIteration) {\r\n      got.value.forEach(source => {\r\n        let refactored = jsonRefactor(source, map[sourceKey].map);\r\n        setter(target, map[sourceKey].key, refactored, setUndefined);\r\n      });\r\n    } else {\r\n      setter(target, map[sourceKey], got.value, setUndefined);\r\n    }\r\n  });\r\n\r\n  return target;\r\n}\n\nexport default jsonRefactor;\n"]}